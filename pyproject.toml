[project]
name = "aioadaptive"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Jesse Saran", email = "8915311+swrap@users.noreply.github.com" }
]
requires-python = ">=3.9"
dependencies = [
    "anyio>=3.0.0",
]
license = "MIT"
keywords = ["asyncio", "adaptive", "aiohttp", "python"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/swrap/aioadaptive"
Documentation = "https://github.com/swrap/aioadaptive#readme"
Source = "https://github.com/swrap/aioadaptive"
Tracker = "https://github.com/swrap/aioadaptive/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ruff>=0.12.4",
    "pytest>=8.3.4",
    "pytest-asyncio>=1.1.0",
]

[tool.ruff]
indent-width = 4
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]

fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/*.py" = [
    "TD002",
    "FIX002",
]
"__init__.py" = ["E402"]
"**/{tests}/*" = [
    "ARG001",   # Unused function argument
    "ARG002",
    "E722",     # Do not use bare except
    "INP001",   # File is part of an implicit namespace package
    "PLR2004",  # Magic value used in comparison
    "PT011",    # pytest.raises() should be used as a context manager
    "S101",     # Use of assert detected
    "SLF001",   # Private member accessed
    "D100",     # Missing docstring in public module
    "D101",
    "D102",
    "D103",     # Checks for undocumented public function definitions
    "D104",
    "ANN001",
    "ANN101",
    "ANN201",
    "TRY002",
    "TRY003",
    "EM101",
]
